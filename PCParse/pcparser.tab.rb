#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.7
# from Racc grammer file "".
#

require 'racc/parser.rb'


# pcparser.rb: generated by racc

class PCParser < Racc::Parser

module_eval(<<'...end pcparser.y/module_eval...', 'pcparser.y', 207)

  def initialize
    @scanner = Scanner.new
  end

  def parse_array tokens
    yyparse tokens, :each
  end

  def parse_file
    do_parse
  end

  def next_token
    @scanner.next_token
  end

  # override the default error reporting function to report line number
  def on_error err_token_id, err_value, value_stack
    puts "Error at or near line #{@scanner.lineno}, while parsing '#{err_value}' (#{token_to_str(err_token_id)})"
    puts "Current parse stack:"
    (value_stack.length-1).downto(0) {|i| puts "\t#{value_stack[i].to_string}"}
  end

...end pcparser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    48,    70,    40,    39,    50,    51,   126,    87,    42,    26,
    15,     8,     9,    10,    11,     8,     9,    10,    11,   -58,
    54,   116,    79,    80,    81,    84,    85,    86,    55,    33,
    34,    35,    41,    48,    57,    40,    39,    57,    60,    61,
    87,    42,    26,   115,    48,    26,    40,    39,   120,   121,
   -57,    87,    42,    25,   114,    79,    80,    81,    60,    61,
   113,    26,    33,    34,    35,    41,    79,    80,    81,   123,
    51,    48,   111,    33,    34,    35,    41,    48,    49,    40,
    39,   110,   109,    91,    87,    42,    40,    39,   103,    92,
    91,    32,    42,    53,    69,    68,   107,    53,    26,    79,
    80,    81,    84,    85,    86,    26,    33,    34,    35,    41,
   134,    25,    27,    33,    34,    35,    41,    40,    39,    24,
    23,    22,    32,    42,    40,    39,    53,    53,    18,    32,
    42,    40,    39,   142,    12,    53,    32,    42,   145,   119,
     8,     9,    10,    11,    33,    34,    35,    41,   106,    53,
   nil,    33,    34,    35,    41,   nil,   nil,   nil,    33,    34,
    35,    41,    40,    39,   nil,   nil,   nil,    32,    42,    40,
    39,   nil,   nil,   nil,    32,    42,    40,    39,   nil,   nil,
   nil,    32,    42,    60,    61,    58,    59,    62,    63,    33,
    34,    35,    41,   nil,   nil,   nil,    33,    34,    35,    41,
   131,   nil,   nil,    33,    34,    35,    41,    40,    39,   nil,
   nil,   nil,    32,    42,    40,    39,   nil,   nil,   nil,    32,
    42,   nil,   nil,    40,    39,   nil,   nil,   125,    32,    42,
     8,     9,    10,    11,    33,    34,    35,    41,   nil,   nil,
   nil,    33,    34,    35,    41,    60,    61,    58,    59,    62,
    33,    34,    35,    41,    40,    39,   nil,   nil,   nil,    32,
    42,    40,    39,   nil,   nil,   nil,    32,    42,    95,    40,
    39,   nil,   nil,   nil,    32,    42,     8,     9,    10,    11,
   nil,    33,    34,    35,    41,   nil,   nil,   nil,    33,    34,
    35,    41,    60,    61,    58,    59,    33,    34,    35,    41,
    40,    39,   nil,   nil,   nil,    32,    42,    40,    39,   nil,
   nil,   nil,    32,    42,    40,    39,   nil,   nil,   nil,    32,
    42,    60,    61,    58,    59,    62,    63,    33,    34,    35,
    41,   nil,   nil,   nil,    33,    34,    35,    41,   nil,   nil,
   nil,    33,    34,    35,    41,    40,    39,   nil,   nil,   nil,
    32,    42,    40,    39,   nil,   nil,   nil,    32,    42,    40,
    39,   nil,   nil,   nil,    32,    42,    60,    61,    58,    59,
    62,    63,    33,    34,    35,    41,   nil,   nil,   nil,    33,
    34,    35,    41,   nil,   nil,   nil,    33,    34,    35,    41,
    40,    39,   nil,   nil,   nil,    32,    42,    40,    39,   nil,
   nil,   nil,    32,    42,     8,     9,    10,    11,    60,    61,
    58,    59,    62,    63,   nil,   nil,   nil,    33,    34,    35,
    41,   nil,   nil,   nil,    33,    34,    35,    41,   140,    60,
    61,    58,    59,    62,    63,   nil,   nil,   nil,   136,    60,
    61,    58,    59,    62,    63,   nil,   nil,   nil,   135,    60,
    61,    58,    59,    62,    63,   nil,   nil,   nil,   102,    60,
    61,    58,    59,    62,    63,   104,   nil,     8,     9,    10,
    11,    29,   nil,     8,     9,    10,    11,    60,    61,    58,
    59,    62,    63,    60,    61,    58,    59,    62,    63,    60,
    61,    58,    59,    62,    63,    60,    61,    58,    59,    62,
    63,    60,    61,    58,    59,    62,    63 ]

racc_action_check = [
    53,    49,    53,    53,    28,    28,   113,    53,    53,    49,
     4,    53,    53,    53,    53,     4,     4,     4,     4,    88,
    31,    86,    53,    53,    53,    53,    53,    53,    31,    53,
    53,    53,    53,   140,    32,   140,   140,    87,    96,    96,
   140,   140,    32,    85,   114,    87,   114,   114,    94,    94,
    87,   114,   114,    18,    84,   140,   140,   140,    97,    97,
    83,    18,   140,   140,   140,   140,   114,   114,   114,   105,
   105,    27,    78,   114,   114,   114,   114,    74,    27,    74,
    74,    77,    76,    89,    74,    74,    59,    59,    68,    55,
    54,    59,    59,    50,    48,    43,    74,    29,    24,    74,
    74,    74,    74,    74,    74,   126,    74,    74,    74,    74,
   128,    23,    19,    59,    59,    59,    59,   134,   134,    17,
    14,    12,   134,   134,    91,    91,   135,   136,     7,    91,
    91,    63,    63,   139,     1,   142,    63,    63,   143,    91,
    73,    73,    73,    73,   134,   134,   134,   134,    73,   145,
   nil,    91,    91,    91,    91,   nil,   nil,   nil,    63,    63,
    63,    63,    62,    62,   nil,   nil,   nil,    62,    62,    61,
    61,   nil,   nil,   nil,    61,    61,    60,    60,   nil,   nil,
   nil,    60,    60,   118,   118,   118,   118,   118,   118,    62,
    62,    62,    62,   nil,   nil,   nil,    61,    61,    61,    61,
   118,   nil,   nil,    60,    60,    60,    60,   125,   125,   nil,
   nil,   nil,   125,   125,   111,   111,   nil,   nil,   nil,   111,
   111,   nil,   nil,    26,    26,   nil,   nil,   111,    26,    26,
     0,     0,     0,     0,   125,   125,   125,   125,   nil,   nil,
   nil,   111,   111,   111,   111,   101,   101,   101,   101,   101,
    26,    26,    26,    26,    58,    58,   nil,   nil,   nil,    58,
    58,    57,    57,   nil,   nil,   nil,    57,    57,    57,   115,
   115,   nil,   nil,   nil,   115,   115,    51,    51,    51,    51,
   nil,    58,    58,    58,    58,   nil,   nil,   nil,    57,    57,
    57,    57,   100,   100,   100,   100,   115,   115,   115,   115,
   116,   116,   nil,   nil,   nil,   116,   116,    81,    81,   nil,
   nil,   nil,    81,    81,   103,   103,   nil,   nil,   nil,   103,
   103,   122,   122,   122,   122,   122,   122,   116,   116,   116,
   116,   nil,   nil,   nil,    81,    81,    81,    81,   nil,   nil,
   nil,   103,   103,   103,   103,    39,    39,   nil,   nil,   nil,
    39,    39,    40,    40,   nil,   nil,   nil,    40,    40,    41,
    41,   nil,   nil,   nil,    41,    41,   132,   132,   132,   132,
   132,   132,    39,    39,    39,    39,   nil,   nil,   nil,    40,
    40,    40,    40,   nil,   nil,   nil,    41,    41,    41,    41,
   121,   121,   nil,   nil,   nil,   121,   121,    42,    42,   nil,
   nil,   nil,    42,    42,     3,     3,     3,     3,   137,   137,
   137,   137,   137,   137,   nil,   nil,   nil,   121,   121,   121,
   121,   nil,   nil,   nil,    42,    42,    42,    42,   137,   130,
   130,   130,   130,   130,   130,   nil,   nil,   nil,   130,   129,
   129,   129,   129,   129,   129,   nil,   nil,   nil,   129,    67,
    67,    67,    67,    67,    67,   nil,   nil,   nil,    67,   133,
   133,   133,   133,   133,   133,    70,   nil,    70,    70,    70,
    70,    25,   nil,    25,    25,    25,    25,   124,   124,   124,
   124,   124,   124,   112,   112,   112,   112,   112,   112,    38,
    38,    38,    38,    38,    38,    82,    82,    82,    82,    82,
    82,    93,    93,    93,    93,    93,    93 ]

racc_action_pointer = [
   214,   134,   nil,   388,    -1,   nil,   nil,   116,   nil,   nil,
   nil,   nil,   121,   nil,   108,   nil,   nil,   107,    40,    97,
   nil,   nil,   nil,    98,    77,   457,   216,    66,   -10,    74,
   nil,     8,    21,   nil,   nil,   nil,   nil,   nil,   484,   338,
   345,   352,   390,    73,   nil,   nil,   nil,   nil,    82,   -12,
    70,   260,   nil,    -5,    69,    77,   nil,   254,   247,    79,
   169,   162,   155,   124,   nil,   nil,   nil,   444,    67,   nil,
   451,   nil,   nil,   124,    72,   nil,    57,    56,    46,   nil,
   nil,   300,   490,    34,    41,    30,     8,    24,    -7,    62,
   nil,   117,   nil,   496,    34,   nil,    33,    53,   nil,   nil,
   287,   240,   nil,   307,   nil,    55,   nil,   nil,   nil,   nil,
   nil,   207,   478,    -6,    39,   262,   293,   nil,   178,   nil,
   nil,   383,   316,   nil,   472,   200,    84,   nil,    85,   434,
   424,   nil,   361,   454,   110,   103,   104,   403,   nil,   100,
    28,   nil,   112,   124,   nil,   126,   nil ]

racc_action_default = [
    -5,   -82,    -1,    -2,    -4,    -7,    -9,   -82,   -21,   -22,
   -23,   -24,   -82,    -6,   -82,    -3,    -8,   -82,   -57,   -12,
   -14,   -58,   147,   -82,   -57,   -82,   -82,   -82,   -82,   -38,
   -26,   -27,   -59,   -60,   -61,   -62,   -63,   -64,   -77,   -82,
   -82,   -82,   -82,   -82,   -13,   -15,   -16,   -17,   -82,   -57,
   -38,   -82,   -11,   -82,   -28,   -82,   -30,   -82,   -82,   -82,
   -82,   -82,   -82,   -82,   -71,   -72,   -73,   -82,   -75,   -18,
   -82,   -10,   -25,   -82,   -82,   -39,   -82,   -82,   -82,   -44,
   -45,   -46,   -48,   -82,   -82,   -82,   -82,   -59,   -64,   -31,
   -33,   -82,   -29,   -81,   -82,   -79,   -65,   -66,   -67,   -68,
   -69,   -70,   -74,   -82,   -19,   -82,   -37,   -36,   -40,   -41,
   -42,   -82,   -47,   -82,   -82,   -82,   -82,   -32,   -82,   -35,
   -78,   -82,   -76,   -20,   -43,   -82,   -49,   -50,   -82,   -82,
   -82,   -34,   -80,   -51,   -82,   -38,   -38,   -82,   -53,   -55,
   -82,   -54,   -38,   -82,   -56,   -38,   -52 ]

racc_goto_table = [
    21,     7,    52,    38,    14,    16,     4,    90,    28,    75,
    21,    20,    47,    72,    56,   128,    64,    65,    66,    67,
    21,    20,     5,    71,    89,    13,    31,    46,    44,    74,
   108,    45,     1,     3,    93,    96,    97,    98,    99,   100,
   101,   143,   117,     2,   141,    43,    88,    94,   nil,   nil,
   nil,   nil,    31,   105,   nil,   nil,   nil,   nil,   112,    73,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    88,   118,   nil,
   nil,    31,   nil,   nil,    16,   nil,   nil,   nil,   nil,   nil,
   122,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   124,   nil,
   nil,   nil,   129,   130,   nil,   nil,   nil,   nil,   132,   nil,
   nil,   nil,   133,   nil,   nil,   nil,   127,    88,   138,   139,
   nil,   137,   nil,   nil,   nil,   144,   nil,   nil,   146,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    88 ]

racc_goto_check = [
    24,     7,     9,    19,     7,     6,     4,    18,     8,    21,
    24,    12,    14,    15,    16,    22,    19,    19,    19,    19,
    24,    12,     5,     9,    17,     5,     7,    13,    11,    20,
    21,    12,     1,     3,    19,    19,    19,    19,    19,    19,
    19,    22,    18,     2,    25,    27,    24,    28,   nil,   nil,
   nil,   nil,     7,     8,   nil,   nil,   nil,   nil,    19,     4,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    24,    19,   nil,
   nil,     7,   nil,   nil,     6,   nil,   nil,   nil,   nil,   nil,
    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    19,   nil,
   nil,   nil,    19,    19,   nil,   nil,   nil,   nil,    19,   nil,
   nil,   nil,    19,   nil,   nil,   nil,    24,    24,     9,     9,
   nil,    19,   nil,   nil,   nil,     9,   nil,   nil,     9,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    24 ]

racc_goto_pointer = [
   nil,    32,    43,    33,     6,    22,     1,     1,   -17,   -27,
   nil,     1,     4,     0,   -15,   -38,   -17,   -30,   -47,   -23,
   -24,   -44,   -99,   nil,    -7,   -95,   nil,    19,   -10 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,     6,    17,   nil,   nil,
    19,   nil,    78,   nil,    83,    30,   nil,   nil,   nil,    82,
   nil,   nil,    76,    77,    37,   nil,    36,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 39, :_reduce_none,
  1, 40, :_reduce_2,
  2, 40, :_reduce_3,
  1, 40, :_reduce_4,
  0, 40, :_reduce_5,
  2, 41, :_reduce_6,
  1, 41, :_reduce_7,
  2, 42, :_reduce_8,
  1, 42, :_reduce_9,
  6, 43, :_reduce_10,
  5, 43, :_reduce_11,
  2, 44, :_reduce_12,
  3, 48, :_reduce_13,
  1, 48, :_reduce_none,
  1, 49, :_reduce_none,
  1, 49, :_reduce_none,
  1, 49, :_reduce_none,
  2, 52, :_reduce_18,
  3, 51, :_reduce_19,
  4, 51, :_reduce_20,
  1, 45, :_reduce_none,
  1, 45, :_reduce_none,
  1, 45, :_reduce_none,
  1, 45, :_reduce_none,
  3, 46, :_reduce_25,
  1, 46, :_reduce_26,
  1, 53, :_reduce_27,
  2, 53, :_reduce_28,
  3, 53, :_reduce_29,
  2, 53, :_reduce_30,
  2, 54, :_reduce_31,
  2, 55, :_reduce_32,
  1, 55, :_reduce_33,
  3, 56, :_reduce_34,
  2, 56, :_reduce_35,
  3, 47, :_reduce_36,
  3, 47, :_reduce_37,
  0, 47, :_reduce_38,
  1, 58, :_reduce_39,
  2, 58, :_reduce_40,
  2, 59, :_reduce_none,
  2, 59, :_reduce_none,
  3, 60, :_reduce_43,
  1, 60, :_reduce_44,
  1, 60, :_reduce_45,
  1, 60, :_reduce_46,
  2, 60, :_reduce_47,
  1, 60, :_reduce_none,
  3, 60, :_reduce_49,
  3, 60, :_reduce_50,
  4, 60, :_reduce_51,
  9, 61, :_reduce_52,
  5, 61, :_reduce_53,
  6, 61, :_reduce_54,
  0, 63, :_reduce_55,
  2, 63, :_reduce_56,
  1, 50, :_reduce_none,
  1, 50, :_reduce_none,
  1, 57, :_reduce_none,
  1, 57, :_reduce_60,
  1, 57, :_reduce_61,
  1, 57, :_reduce_62,
  1, 57, :_reduce_none,
  1, 57, :_reduce_none,
  3, 57, :_reduce_65,
  3, 57, :_reduce_66,
  3, 57, :_reduce_67,
  3, 57, :_reduce_68,
  3, 57, :_reduce_69,
  3, 57, :_reduce_70,
  2, 57, :_reduce_71,
  2, 57, :_reduce_72,
  2, 57, :_reduce_73,
  3, 57, :_reduce_74,
  4, 62, :_reduce_75,
  4, 65, :_reduce_76,
  1, 65, :_reduce_77,
  4, 64, :_reduce_78,
  3, 64, :_reduce_79,
  3, 66, :_reduce_80,
  1, 66, :_reduce_81 ]

racc_reduce_n = 82

racc_shift_n = 147

racc_token_table = {
  false => 0,
  :error => 1,
  :UMINUS => 2,
  :UPLUS => 3,
  :PREFIXOP => 4,
  "*" => 5,
  "/" => 6,
  "+" => 7,
  "-" => 8,
  :BOOL_OP => 9,
  :REL_OP => 10,
  :fn_defs => 11,
  :IDENTIFIER => 12,
  "(" => 13,
  ")" => 14,
  "," => 15,
  :CHAR => 16,
  :INT => 17,
  :DOUBLE => 18,
  :VOID => 19,
  "&" => 20,
  "[" => 21,
  "]" => 22,
  "{" => 23,
  "}" => 24,
  ";" => 25,
  "=" => 26,
  :BREAK => 27,
  :CONTINUE => 28,
  :RETURN => 29,
  :FOR => 30,
  :WHILE => 31,
  :IF => 32,
  :ELSE => 33,
  :INT_NUM => 34,
  :REAL_NUM => 35,
  :STRING => 36,
  :PREFIX_OP => 37 }

racc_nt_base = 38

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "UMINUS",
  "UPLUS",
  "PREFIXOP",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "BOOL_OP",
  "REL_OP",
  "fn_defs",
  "IDENTIFIER",
  "\"(\"",
  "\")\"",
  "\",\"",
  "CHAR",
  "INT",
  "DOUBLE",
  "VOID",
  "\"&\"",
  "\"[\"",
  "\"]\"",
  "\"{\"",
  "\"}\"",
  "\";\"",
  "\"=\"",
  "BREAK",
  "CONTINUE",
  "RETURN",
  "FOR",
  "WHILE",
  "IF",
  "ELSE",
  "INT_NUM",
  "REAL_NUM",
  "STRING",
  "PREFIX_OP",
  "$start",
  "target",
  "program",
  "function_defs",
  "type_decls",
  "function_def",
  "type_decl",
  "typename",
  "formal_params",
  "block",
  "decl_list",
  "decl",
  "lval",
  "fn_decl",
  "pointer_decl",
  "formal_param",
  "array_formal",
  "array_formal_subs",
  "array_formal_sub",
  "expr",
  "stmt_list",
  "stmt",
  "simple_stmt",
  "compound_stmt",
  "array_ref",
  "optional_else",
  "function_call",
  "array_index_list",
  "actual_params" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'pcparser.y', 23)
  def _reduce_2(val, _values, result)
     result = :Program[val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 24)
  def _reduce_3(val, _values, result)
     result = :Program[val[0],val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 25)
  def _reduce_4(val, _values, result)
     result = :Program[val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 26)
  def _reduce_5(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 30)
  def _reduce_6(val, _values, result)
     result = val[0] + [val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 31)
  def _reduce_7(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 36)
  def _reduce_8(val, _values, result)
     result = val[0] + [val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 37)
  def _reduce_9(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 41)
  def _reduce_10(val, _values, result)
     result = :Function[val[0], val[1], :Formals[val[3]], :Block[val[5]]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 42)
  def _reduce_11(val, _values, result)
     result = :Function[val[0], val[1], :Formals[[]], :Block[val[4]]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 47)
  def _reduce_12(val, _values, result)
     result = [val[0], val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 52)
  def _reduce_13(val, _values, result)
     result = val[0] + [val[2]] 
    result
  end
.,.,

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

module_eval(<<'.,.,', 'pcparser.y', 66)
  def _reduce_18(val, _values, result)
     result =:PointerVar[val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 71)
  def _reduce_19(val, _values, result)
     result = [val[0],:Formals[[]]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 72)
  def _reduce_20(val, _values, result)
     result = [val[0],:Formal[val[2]]] 
    result
  end
.,.,

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

# reduce 24 omitted

module_eval(<<'.,.,', 'pcparser.y', 83)
  def _reduce_25(val, _values, result)
     result = val[0] + [val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 84)
  def _reduce_26(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 88)
  def _reduce_27(val, _values, result)
     result = [val[0], ''] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 89)
  def _reduce_28(val, _values, result)
     result = [val[0], val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 90)
  def _reduce_29(val, _values, result)
     result = [val[0], :RefArg[val[2]]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 91)
  def _reduce_30(val, _values, result)
     result = [val[0], val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 95)
  def _reduce_31(val, _values, result)
     result = :ArrayArg[val[0], val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 99)
  def _reduce_32(val, _values, result)
     result = val[0] + [val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 100)
  def _reduce_33(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 104)
  def _reduce_34(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 105)
  def _reduce_35(val, _values, result)
     result = :EmptySubscript[] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 114)
  def _reduce_36(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 115)
  def _reduce_37(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 116)
  def _reduce_38(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 121)
  def _reduce_39(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 122)
  def _reduce_40(val, _values, result)
     result = val[0] + [val[1]] 
    result
  end
.,.,

# reduce 41 omitted

# reduce 42 omitted

module_eval(<<'.,.,', 'pcparser.y', 132)
  def _reduce_43(val, _values, result)
     result = :Assignment[val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 133)
  def _reduce_44(val, _values, result)
     result = :BreakStmt[] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 134)
  def _reduce_45(val, _values, result)
     result = :ContinueStmt[] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 135)
  def _reduce_46(val, _values, result)
     result = :ReturnStmt[] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 136)
  def _reduce_47(val, _values, result)
     result = :ReturnStmt[val[1]] 
    result
  end
.,.,

# reduce 48 omitted

module_eval(<<'.,.,', 'pcparser.y', 138)
  def _reduce_49(val, _values, result)
     result = :PointerAssignment[val[0],val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 139)
  def _reduce_50(val, _values, result)
     result = :PointerAssignment[val[0],val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 140)
  def _reduce_51(val, _values, result)
     result =:PointerAssignment[val[0],val[3]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 145)
  def _reduce_52(val, _values, result)
     result = :ForStmt[val[0],val[2],val[4],:Block[val[5]] ]
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 146)
  def _reduce_53(val, _values, result)
     result = :WhileStmt[val[0],val[2],:Block[val[4]]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 147)
  def _reduce_54(val, _values, result)
     result = :IfStmt[val[0],val[2],:Block[val[4]],val[5]]  
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 152)
  def _reduce_55(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 153)
  def _reduce_56(val, _values, result)
     result = :ElseStmt[val[0],val[1]] 
    result
  end
.,.,

# reduce 57 omitted

# reduce 58 omitted

# reduce 59 omitted

module_eval(<<'.,.,', 'pcparser.y', 163)
  def _reduce_60(val, _values, result)
     result = :ConstInt[val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 164)
  def _reduce_61(val, _values, result)
     result = :ConstReal[val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 165)
  def _reduce_62(val, _values, result)
     result = :ConstString[val[0]] 
    result
  end
.,.,

# reduce 63 omitted

# reduce 64 omitted

module_eval(<<'.,.,', 'pcparser.y', 168)
  def _reduce_65(val, _values, result)
     result = :BinaryOp[val[0], '+', val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 169)
  def _reduce_66(val, _values, result)
     result = :BinaryOp[val[0], '-', val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 170)
  def _reduce_67(val, _values, result)
     result = :BinaryOp[val[0], '*', val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 171)
  def _reduce_68(val, _values, result)
     result = :BinaryOp[val[0], '/', val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 172)
  def _reduce_69(val, _values, result)
     result = :BinaryOp[val[0], val[1], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 173)
  def _reduce_70(val, _values, result)
     result = :BinaryOp[val[0], val[1], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 174)
  def _reduce_71(val, _values, result)
     result = :UnaryOp['=', val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 175)
  def _reduce_72(val, _values, result)
     result = :UnaryOp['+', val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 176)
  def _reduce_73(val, _values, result)
     result = :UnaryOp[val[0], val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 177)
  def _reduce_74(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 181)
  def _reduce_75(val, _values, result)
     result = :ArrayRef[val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 185)
  def _reduce_76(val, _values, result)
     result = val[0] + [val[3]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 186)
  def _reduce_77(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 190)
  def _reduce_78(val, _values, result)
     result = :FunctionCall[val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 191)
  def _reduce_79(val, _values, result)
     result = :FunctionCall[val[0], [[]]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 195)
  def _reduce_80(val, _values, result)
     result = val[0] + [val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'pcparser.y', 196)
  def _reduce_81(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class PCParser


# I suggest not using the footer, unless you want to execute some code once when the parser is included
require 'rubywrite'
require 'PCParse/scanner'
